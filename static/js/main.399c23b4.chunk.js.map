{"version":3,"sources":["img/hero.svg","component/lemonade-seleciton/lemonade-selection.component.jsx","pages/form/formpage.component.jsx","component/table-entry/table-entry.compoennt.jsx","component/report-section/report-section.component.jsx","pages/report/report.component.jsx","component/header/header.component.jsx","component/transaction-list/transaction-list.component.jsx","component/hero/hero.component.jsx","data-files/lemonade-data.js","data-files/employee-data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LemonadeSelection","drink","handleChange","name","price","imageUrl","quantity","className","src","alt","style","color","fontSize","type","onChange","e","target","value","min","placeholder","toFixed","FormPage","props","index","state","lemonades","findIndex","item","parseInt","setState","submitTransaction","transaction","date","time","filter","lemonade","total","reduce","accul","submitToReport","show","window","setTimeout","map","addToMenu","showAdd","submitDrink","preventDefault","newDrink","removeDrink","slice","concat","length","showRemove","this","updateDrinks","Container","maxWidth","Alert","variant","dismissible","onClose","Heading","key","onClick","Form","onSubmit","Group","Label","Control","required","Text","step","Button","Row","Col","sm","id","React","Component","TableEntry","employeeCommission","ReportSection","reportableEmployees","employees","employee","sales","Card","commission","position","sort","a","b","Date","parse","sale","Report","submitReport","transactions","startDate","startTime","endDate","endTime","showError","validTransactions","findTransactions","personel","showSuccess","trans","sDate","sTime","eDate","eTime","parsedStartDate","parsedEndDate","tran","tranDate","submitEmployee","newEmployee","removeEmployee","updateEmployees","Header","Navbar","expand","bg","to","Brand","Toggle","aria-controls","Collapse","Nav","TransactionList","Hero","Jumbotron","hero","LEMONADE_DATA","EMPLOYEE_DATA","App","newLemonades","console","log","newEmployees","exact","path","render","component","Boolean","location","hostname","match","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.399c23b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.f8dcdab2.svg\";","import React from \"react\";\nimport \"./lemonade-selection.styles.scss\";\nconst LemonadeSelection = ({ drink, handleChange }) => {\n  const { name, price, imageUrl, quantity } = drink;\n  return (\n    <div className=\"lemonade-selection\">\n      <div className=\"image-container\">\n        <img src={imageUrl} alt=\"item\" />\n      </div>\n      <span style={{ color: \"rgb(52,58,64\" }}>{name}</span>\n      <div className=\"quantity\" style={{ fontSize: \"15px\" }}>\n        <p className=\"text-muted\">Quantity:</p>\n        <div>\n          <input\n            type=\"number\"\n            onChange={(e) => handleChange(e.target.value, drink.name)}\n            min=\"0\"\n            placeholder=\"0\"\n            value={quantity}\n          />\n        </div>\n      </div>\n      <div className=\"price\" style={{ fontSize: \"15px\" }}>\n        <p className=\"text-muted\">Price:</p>\n        <p>${price.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LemonadeSelection;\n","import React from \"react\";\nimport \"./formpage.styles.scss\";\nimport LemonadeSelection from \"../../component/lemonade-seleciton/lemonade-selection.component\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass FormPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lemonades: this.props.lemonades,\n      date: \"\",\n      time: \"\",\n      show: false,\n      showAdd: false,\n      showRemove: false,\n      newDrink: {},\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.updateDrinks(this.state.lemonades);\n  }\n\n  handleChange = (value, name) => {\n    const index = this.state.lemonades.findIndex((item) => item.name === name);\n    const lemonades = this.state.lemonades;\n    lemonades[index].quantity = parseInt(value);\n    this.setState({ lemonades: [...lemonades] });\n  };\n\n  submitTransaction = () => {\n    const transaction = {\n      date: this.state.date + \" \" + this.state.time,\n      lemonades: this.state.lemonades.filter(\n        (lemonade) => parseInt(lemonade.quantity) !== 0\n      ),\n      total: this.state.lemonades.reduce((accul, lemonade) => {\n        const quantity = lemonade.quantity ? parseInt(lemonade.quantity) : 0;\n        return accul + quantity * lemonade.price;\n      }, 0),\n    };\n    transaction.total\n      ? this.props.submitToReport(transaction)\n      : this.setState({ show: true }, () => {\n          window.setTimeout(() => {\n            this.setState({ show: false });\n          }, 5000);\n        });\n    const lemonades = this.state.lemonades;\n\n    this.setState({\n      lemonades: lemonades.map((lemonade) => ({ ...lemonade, quantity: 0 })),\n      date: \"\",\n      time: \"\",\n    });\n  };\n\n  addToMenu = () => this.setState({ showAdd: true });\n\n  submitDrink = (e) => {\n    e.preventDefault();\n    this.setState({ showAdd: false });\n    const newDrink = { ...this.state.newDrink, quantity: 0 };\n    this.setState({ lemonades: [...this.state.lemonades, newDrink] }, () =>\n      this.setState({ newDrink: {} })\n    );\n  };\n\n  removeDrink = (index) => {\n    const lemonades = this.state.lemonades;\n    this.setState({\n      lemonades: lemonades\n        .slice(0, index)\n        .concat(lemonades.slice(index + 1, lemonades.length)),\n    });\n  };\n\n  render() {\n    return (\n      <Container style={{ maxWidth: \"1000px\" }} className=\"formpage\">\n        <Alert\n          show={this.state.show}\n          variant=\"danger\"\n          dismissible={true}\n          onClose={() => this.setState({ show: false })}\n        >\n          <Alert.Heading>No drinks sold!</Alert.Heading>\n        </Alert>\n\n        {/* Remove a drink /////////////////////////////////////////////////////////*/}\n        <Alert\n          show={this.state.showRemove}\n          variant=\"danger\"\n          dismissible={true}\n          onClose={() => this.setState({ showRemove: false })}\n        >\n          <Alert.Heading>\n            Remove a drink (Click on the drink you want to remove)\n          </Alert.Heading>\n          {this.state.lemonades.map((lemonade, index) => (\n            <p\n              key={lemonade.name}\n              className=\"point\"\n              onClick={() => {\n                this.removeDrink(index);\n              }}\n            >\n              {lemonade.name}\n            </p>\n          ))}\n        </Alert>\n\n        {/* Add a drink /////////////////////////////////////////////////////////*/}\n        <Alert\n          show={this.state.showAdd}\n          variant=\"success\"\n          dismissible={true}\n          onClose={() => this.setState({ showAdd: false })}\n        >\n          <Alert.Heading>Add a new drink to the menu</Alert.Heading>\n          <Form onSubmit={this.submitDrink}>\n            <Form.Group>\n              <Form.Label>Image URL</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter URL\"\n                onChange={(e) =>\n                  this.setState({\n                    newDrink: {\n                      ...this.state.newDrink,\n                      imageUrl: e.target.value,\n                    },\n                  })\n                }\n              />\n              <Form.Text className=\"text-muted\">\n                Image URL for the display image of the item\n              </Form.Text>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter name\"\n                onChange={(e) =>\n                  this.setState({\n                    newDrink: { ...this.state.newDrink, name: e.target.value },\n                  })\n                }\n              />\n              <Form.Text className=\"text-muted\">Name of the item</Form.Text>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                placeholder=\"Enter price\"\n                step=\"0.01\"\n                onChange={(e) =>\n                  this.setState({\n                    newDrink: {\n                      ...this.state.newDrink,\n                      price: parseInt(e.target.value),\n                    },\n                  })\n                }\n              />\n              <Form.Text className=\"text-muted\">Price of the item</Form.Text>\n            </Form.Group>\n            <Button variant=\"custom\" type=\"submit\">\n              Add\n            </Button>\n          </Form>\n        </Alert>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.submitTransaction();\n          }}\n        >\n          <Row>\n            <Col sm=\"6\" className=\"d-flex justify-content-between\">\n              <label>Pick date: </label>\n              <input\n                id=\"date\"\n                type=\"date\"\n                name=\"date\"\n                value={this.state.date}\n                onChange={(e) => this.setState({ date: e.target.value })}\n                required\n              />\n            </Col>\n            <Col sm=\"6\" className=\"d-flex justify-content-between\">\n              <label>Pick time of transaction:</label>\n              <input\n                id=\"time\"\n                type=\"time\"\n                name=\"time\"\n                value={this.state.time}\n                onChange={(e) => this.setState({ time: e.target.value })}\n                required\n              />\n            </Col>\n          </Row>\n          <div className=\"lemonade-gallery\">\n            {this.state.lemonades.map((drink) => (\n              <LemonadeSelection\n                key={drink.name}\n                drink={drink}\n                handleChange={this.handleChange}\n              />\n            ))}\n          </div>\n\n          <Container style={{ maxWidth: \"1000px\" }}>\n            <Row className=\"mb-2\">\n              <Col\n                className=\"d-flex justify-content-between\"\n                style={{ color: \"rgb(52, 58, 64)\" }}\n              >\n                <h4 className=\"text-muted\">Total:</h4>\n                <h4>\n                  $\n                  {this.state.lemonades\n                    .reduce((accul, lemonade) => {\n                      const quantity = lemonade.quantity\n                        ? parseInt(lemonade.quantity)\n                        : 0;\n                      return accul + quantity * lemonade.price;\n                    }, 0)\n                    .toFixed(2)}\n                </h4>\n              </Col>\n            </Row>\n            <Row className=\"mb-2\">\n              <Col>\n                <Row>\n                  <Col sm=\"6\">\n                    <Button\n                      variant=\"custom\"\n                      className=\"w-100\"\n                      onClick={this.addToMenu}\n                    >\n                      Add To Menu\n                    </Button>\n                  </Col>\n                  <Col sm=\"6\">\n                    <Button\n                      className=\"w-100\"\n                      variant=\"custom1\"\n                      onClick={() => this.setState({ showRemove: true })}\n                    >\n                      Remove Drinks\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n              <Col className=\"d-flex justify-content-end\">\n                <Button variant=\"custom\" type=\"submit\">\n                  Submit Transaction\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default FormPage;\n","import React from \"react\";\n\nconst TableEntry = ({ transaction, employeeCommission }) => {\n  return (\n    <tr>\n      <td>{transaction.date}</td>\n      <td>\n        {transaction.lemonades.map((lemonade) => (\n          <p>\n            {lemonade.name} * {lemonade.quantity}\n          </p>\n        ))}\n      </td>\n      <td>${transaction.total.toFixed(2)}</td>\n      {employeeCommission ? (\n        <td>${((transaction.total * employeeCommission) / 100).toFixed(2)}</td>\n      ) : (\n        <></>\n      )}\n    </tr>\n  );\n};\n\nexport default TableEntry;\n","import React from \"react\";\nimport \"./report-section.styles.scss\";\nimport TableEntry from \"../table-entry/table-entry.compoennt\";\nimport { Card } from \"react-bootstrap\";\nconst ReportSection = ({ employees }) => {\n  const reportableEmployees = employees.filter((employee) => employee.sales);\n\n  return (\n    <Card className=\"round shadow mb-3\">\n      <div className=\"report-section\">\n        <h4 className=\"my-2\">Report: </h4>\n        {reportableEmployees.map((employee) => (\n          <div className=\"my-3\">\n            <h5>{employee.name}: </h5>\n            <p className=\"mb-1\">\n              Commission: {employee.commission}% Postion: {employee.position}\n            </p>\n            <table className=\"ml-3\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Items Sold</th>\n                  <th>Total Price</th>\n                  <th>Commission Earned</th>\n                </tr>\n              </thead>\n              <tbody>\n                {employee.sales\n                  .sort((a, b) => Date.parse(a.date) - Date.parse(b.date))\n                  .map((sale) => (\n                    <TableEntry\n                      key={sale.date}\n                      transaction={sale}\n                      employeeCommission={employee.commission}\n                    />\n                  ))}\n                <tr>\n                  <td>Total</td>\n                  <td>---</td>\n                  <td>\n                    $\n                    {employee.sales\n                      .reduce((accul, sale) => accul + sale.total, 0)\n                      .toFixed(2)}\n                  </td>\n                  <td>\n                    {(\n                      (employee.sales.reduce(\n                        (accul, sale) => accul + sale.total,\n                        0\n                      ) *\n                        employee.commission) /\n                      100\n                    ).toFixed(2)}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n    </Card>\n  );\n};\nexport default ReportSection;\n","import React from \"react\";\n\nimport ReportSection from \"../../component/report-section/report-section.component\";\n\nimport \"./report.styles.scss\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass Report extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: this.props.employees,\n      startDate: \"\",\n      startTime: \"\",\n      endDate: \"\",\n      endTime: \"\",\n      employee: \"\",\n      showSuccess: false,\n      showError: false,\n      showAdd: false,\n      showRemove: false,\n      newEmployee: {},\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.updateEmployees(this.state.employees);\n  }\n\n  submitReport = (e) => {\n    e.preventDefault();\n    const transactions = this.props.transactions;\n    const {\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n      employee,\n      employees,\n    } = this.state;\n    if (employee === \"\" || employee === \"Please pick an employee\") {\n      this.setState({ showError: true }, () => {\n        window.setTimeout(() => {\n          this.setState({ showError: false });\n        }, 5000);\n      });\n    } else {\n      const validTransactions = this.findTransactions(\n        transactions,\n        startDate,\n        startTime,\n        endDate,\n        endTime\n      );\n      const index = employees.findIndex(\n        (personel) => personel.name === employee\n      );\n      employees[index] = { ...employees[index], sales: validTransactions };\n      this.setState({ employees: employees, showSuccess: true }, () => {\n        window.setTimeout(() => {\n          this.setState({ showSuccess: false });\n        }, 5000);\n      });\n    }\n  };\n\n  findTransactions = (trans, sDate, sTime, eDate, eTime) => {\n    const parsedStartDate = Date.parse(sDate + \" \" + sTime);\n    const parsedEndDate = Date.parse(eDate + \" \" + eTime);\n    return trans.filter((tran) => {\n      const tranDate = Date.parse(tran.date);\n      if (tranDate >= parsedStartDate && tranDate <= parsedEndDate) {\n        return tran;\n      }\n      return;\n    });\n  };\n\n  submitEmployee = (e) => {\n    e.preventDefault();\n    this.setState({ showAdd: false });\n    this.setState(\n      { employees: [...this.state.employees, this.state.newEmployee] },\n      () => this.setState({ newEmployee: {} })\n    );\n  };\n\n  removeEmployee = (index) => {\n    const employees = this.state.employees;\n    this.setState({\n      employees: employees\n        .slice(0, index)\n        .concat(employees.slice(index + 1, employees.length)),\n    });\n  };\n\n  render() {\n    return (\n      <Container style={{ maxWidth: \"1000px\" }} className=\"report\">\n        <Alert\n          show={this.state.showSuccess}\n          variant=\"success\"\n          dismissible={true}\n          onClose={() => this.setState({ showSuccess: false })}\n        >\n          <Alert.Heading>Successfully added to report!</Alert.Heading>\n        </Alert>\n        <Alert\n          show={this.state.showError}\n          variant=\"danger\"\n          dismissible={true}\n          onClose={() => this.setState({ showError: false })}\n        >\n          <Alert.Heading>Please pick an employee!</Alert.Heading>\n        </Alert>\n\n        {/* Remove an employee /////////////////////////////////////////////////////////*/}\n        <Alert\n          show={this.state.showRemove}\n          variant=\"danger\"\n          dismissible={true}\n          onClose={() => this.setState({ showRemove: false })}\n        >\n          <Alert.Heading>Remove an employee</Alert.Heading>\n          {this.state.employees.map((employee, index) => (\n            <p\n              key={employee.name}\n              className=\"point\"\n              onClick={() => {\n                this.removeEmployee(index);\n              }}\n            >\n              {employee.name}\n            </p>\n          ))}\n        </Alert>\n\n        {/* Add an employee /////////////////////////////////////////////////////////*/}\n\n        <Alert\n          show={this.state.showAdd}\n          variant=\"success\"\n          dismissible={true}\n          onClose={() => this.setState({ showAdd: false })}\n        >\n          <Alert.Heading>Add a new employee</Alert.Heading>\n          <Form onSubmit={this.submitEmployee}>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter name\"\n                onChange={(e) =>\n                  this.setState({\n                    newEmployee: {\n                      ...this.state.newEmployee,\n                      name: e.target.value,\n                    },\n                  })\n                }\n              />\n              <Form.Text className=\"text-muted\">\n                Name of the new employee\n              </Form.Text>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Position</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Enter position\"\n                onChange={(e) =>\n                  this.setState({\n                    newEmployee: {\n                      ...this.state.newEmployee,\n                      position: e.target.value,\n                    },\n                  })\n                }\n              />\n              <Form.Text className=\"text-muted\">\n                Position of the new employee\n              </Form.Text>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Commission</Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                placeholder=\"Enter comission in (%)\"\n                onChange={(e) =>\n                  this.setState({\n                    newEmployee: {\n                      ...this.state.newEmployee,\n                      commission: parseInt(e.target.value),\n                    },\n                  })\n                }\n              />\n              <Form.Text className=\"text-muted\">\n                Commission rate of the new employee\n              </Form.Text>\n            </Form.Group>\n            <Button variant=\"custom\" type=\"submit\">\n              Add\n            </Button>\n          </Form>\n        </Alert>\n        <form onSubmit={this.submitReport}>\n          <div className=\"inputs\">\n            <div>\n              <span>Start Date: </span>\n              <input\n                id=\"startDate\"\n                type=\"date\"\n                name=\"startDate\"\n                value={this.state.startDate}\n                onChange={(e) => this.setState({ startDate: e.target.value })}\n                required\n              />\n            </div>\n            <div>\n              <span>Start Time: </span>\n              <input\n                id=\"startTime\"\n                type=\"time\"\n                name=\"startTime\"\n                value={this.state.startTime}\n                onChange={(e) => this.setState({ startTime: e.target.value })}\n                required\n              />\n            </div>\n            <div>\n              <span>End Date: </span>\n              <input\n                id=\"endDate\"\n                type=\"date\"\n                name=\"endDate\"\n                value={this.state.endDate}\n                onChange={(e) => this.setState({ endDate: e.target.value })}\n                required\n              />\n            </div>\n            <div>\n              <span>End Time: </span>\n              <input\n                id=\"endTime\"\n                type=\"time\"\n                name=\"endTime\"\n                value={this.state.endTime}\n                onChange={(e) => this.setState({ endTime: e.target.value })}\n                required\n              />\n            </div>\n            <div>\n              <span>Employee: </span>\n              <select\n                onChange={(e) => this.setState({ employee: e.target.value })}\n                required\n              >\n                <option>Please pick an empolyee</option>\n                {this.state.employees.map((employee) => (\n                  <option key={employee.name}>{employee.name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"d-flex justify-content-end\">\n              <Button type=\"submit\" variant=\"custom\">\n                Submit Report\n              </Button>\n            </div>\n          </div>\n        </form>\n        <Row>\n          <Col className=\"mb-2\">\n            <Button\n              className=\"w-100\"\n              variant=\"custom\"\n              onClick={() => this.setState({ showAdd: true })}\n            >\n              Add Employees\n            </Button>\n          </Col>\n          <Col className=\"mb-2\">\n            <Button\n              className=\"w-100\"\n              variant=\"custom1\"\n              onClick={() => this.setState({ showRemove: true })}\n            >\n              Remove Employees\n            </Button>\n          </Col>\n        </Row>\n        <ReportSection employees={this.state.employees} />\n      </Container>\n    );\n  }\n}\n\nexport default Report;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./header.styles.scss\";\n\nconst Header = () => {\n  return (\n    <div style={{ position: \"sticky\" }} className=\"mb-3\">\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\n        <Link to=\"/\">\n          <Navbar.Brand>Lemonade Stand Transaction Tracker</Navbar.Brand>\n        </Link>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/\" className=\"nav-link\">\n              Home\n            </Link>\n            <Link to=\"/sales/form\" className=\"nav-link\">\n              Enter Transactions\n            </Link>\n            <Link to=\"/sales/report\" className=\"nav-link\">\n              See Report\n            </Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport \"./transaction-list.styles.scss\";\nimport { Card, Container } from \"react-bootstrap\";\nimport TableEntry from \"../table-entry/table-entry.compoennt\";\nconst TransactionList = ({ transactions }) => (\n  <Container style={{ maxWidth: \"1000px\", color: \"rgb(52, 58, 64)\" }}>\n    <Card className=\"round shadow mb-3\">\n      <div className=\"transaction-list\">\n        <h4 className=\"my-2\">Transactions: </h4>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Items Sold</th>\n              <th>Total Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions\n              .sort((a, b) => Date.parse(a.date) - Date.parse(b.date))\n              .map((transaction) => (\n                <TableEntry key={transaction.date} transaction={transaction} />\n              ))}\n            <tr>\n              <td>Total</td>\n              <td>---</td>\n              <td>\n                $\n                {transactions\n                  .reduce((accul, sale) => accul + sale.total, 0)\n                  .toFixed(2)}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  </Container>\n);\n\nexport default TransactionList;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"./hero.styles.scss\";\nimport { Link } from \"react-router-dom\";\nimport hero from \"../../img/hero.svg\";\nconst Hero = () => (\n  <Container style={{ maxWidth: \"500px\" }}>\n    <h1 className=\"text-center text-dark\">Welcome to The Lemonade Stand!</h1>\n    <Row>\n      <Col sm=\"6\" className=\"d-flex justify-content-center\">\n        <Link to=\"/sales/form\">\n          <Button variant=\"custom\" className=\"p-2 m-2 w-100 shadow round\">\n            Enter Transaction\n          </Button>\n        </Link>\n      </Col>\n      <Col sm=\"6\" className=\"d-flex justify-content-center\">\n        <Link to=\"/sales/report\">\n          <Button variant=\"custom\" className=\"p-2 m-2 w-100 shadow round\">\n            Generate Report\n          </Button>\n        </Link>\n      </Col>\n    </Row>\n    <Jumbotron className=\"shadow round\">\n      <img src={hero} className=\"h-100 w-100\"></img>\n    </Jumbotron>\n  </Container>\n);\n\nexport default Hero;\n","export const LEMONADE_DATA = [\n  {\n    name: \"Fresh Lemon Lemonade\",\n    price: 1.5,\n    quantity: 0,\n    imageUrl:\n      \"https://snacksandsips.com/wp-content/uploads/2018/07/00-Boozy-Mango-Lemonade.jpg\",\n  },\n  {\n    name: \"Orange & Lemon Splash\",\n    price: 2.0,\n    quantity: 0,\n    imageUrl:\n      \"https://www.tasteofhome.com/wp-content/uploads/2018/01/Spiked-Lemonade_EXPS_THSUM18_37199_D02_01_8b.jpg\",\n  },\n  {\n    name: \"Sugary Shocker\",\n    price: 3.0,\n    quantity: 0,\n    imageUrl:\n      \"https://www.theflavorbender.com/wp-content/uploads/2017/06/Color-Changing-Lemonade-The-Flavor-Bender-Featured-Image-SQ-1.jpg\",\n  },\n  {\n    name: \"Wild Whiskey Whack\",\n    price: 5.5,\n    quantity: 0,\n    imageUrl:\n      \"https://cafedelites.com/wp-content/uploads/2018/06/Pink-Vodka-Lemonade-IMAGE-3.jpg\",\n  },\n];\n","export const EMPLOYEE_DATA = [\n  {\n    name: \"Jeff Terry\",\n    position: \"Senior\",\n    commission: 10,\n  },\n  {\n    name: \"Thomas Black\",\n    position: \"Manager\",\n    commission: 20,\n  },\n  {\n    name: \"John Rice\",\n    position: \"Junior\",\n    commission: 5,\n  },\n  {\n    name: \"Larry Long\",\n    position: \"Junior\",\n    commission: 0,\n  },\n];\n","import React from \"react\";\nimport \"./App.scss\";\nimport FormPage from \"./pages/form/formpage.component\";\nimport Report from \"./pages/report/report.component\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./component/header/header.component\";\nimport TransactionList from \"./component/transaction-list/transaction-list.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Hero from \"./component/hero/hero.component\";\n\nimport { LEMONADE_DATA } from \"./data-files/lemonade-data\";\nimport { EMPLOYEE_DATA } from \"./data-files/employee-data\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      transactions: [],\n      show: false,\n      employees: EMPLOYEE_DATA,\n      lemonades: LEMONADE_DATA,\n    };\n  }\n\n  submitToReport = (transaction) => {\n    this.setState({ transactions: [...this.state.transactions, transaction] });\n    this.setState({ show: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ show: false });\n      }, 5000);\n    });\n  };\n\n  updateDrinks = (newLemonades) => {\n    this.setState({ lemonades: newLemonades }, () => console.log(this.state));\n  };\n  updateEmployees = (newEmployees) => {\n    this.setState({ employees: newEmployees }, () => console.log(this.state));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <style type=\"text/css\">\n          {`\n    .btn-custom {\n      background-color: rgb(0,128,128);\n      color: white;\n    }\n    .btn-custom:hover {\n      background-color: rgb(0,100,100);\n      color: white;\n    }\n\n    .btn-custom1 {\n      background-color: rgb(205, 205, 205);\n      color: rgb(52,58,64);\n    }\n    .btn-custom1:hover {\n      background-color: rgb(180, 180, 180);\n      color: rgb(52,58,64);\n    }\n\n    .btn-custom2 {\n      background-color: rgb(245, 245, 245);\n      color: rgb(52,58,64);\n      border: 1px solid rgb(52,58,64);\n    }\n    .btn-custom2:hover {\n      background-color: rgb(52,58,64);\n      color: white;\n      border: 1px solid rgb(52,58,64);\n    }\n    `}\n        </style>\n        <Header />\n        <Alert\n          show={this.state.show}\n          variant=\"success\"\n          dismissible={true}\n          onClose={() => this.setState({ show: false })}\n        >\n          <Alert.Heading>Successfully saved transaction!</Alert.Heading>\n        </Alert>\n        <Switch>\n          <Route\n            exact\n            path=\"/sales/form\"\n            render={() => (\n              <FormPage\n                submitToReport={this.submitToReport}\n                lemonades={this.state.lemonades}\n                updateDrinks={this.updateDrinks}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/sales/report\"\n            render={() => (\n              <Report\n                transactions={this.state.transactions}\n                employees={this.state.employees}\n                updateEmployees={this.updateEmployees}\n              />\n            )}\n          />\n          <Route exact path=\"/\" component={Hero} />\n        </Switch>\n        <TransactionList transactions={this.state.transactions} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}